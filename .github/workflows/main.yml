# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  
  AWS_REGION : "us-east-1" #Chane to reflect your Region

# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: arn:aws:iam::701806000562:role/InitialTranslateStack-GithubActionsRole-2y6CRDQhD0qd #change to reflect your IAM role’s ARN
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION }}

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install dependencies
      working-directory: ./frontend
      run: npm install

    # - name: Run tests here

    - name: Build
      working-directory: ./frontend
      run: npm run build

  deploylambda:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: arn:aws:iam::701806000562:role/InitialTranslateStack-GithubActionsRole-2y6CRDQhD0qd #change to reflect your IAM role’s ARN
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION }}

    - name: Checkout
      uses: actions/checkout@v3
    - name: Deploy
      if: success()
      run: aws s3 sync ./frontend/dist/frontend s3://translate-app-frontend-1

      # deploy lambda
    - run: sam build --use-container
      working-directory: ./lambda

      # Run Unit tests- Specify unit tests here 

    - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name sam-translate --capabilities CAPABILITY_IAM --resolve-s3 --region ${{ env.AWS_REGION }} 
      working-directory: ./lambda